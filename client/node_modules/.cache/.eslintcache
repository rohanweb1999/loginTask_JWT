[{"/home/dataexim/Documents/LoginTask_JWT/client/src/index.js":"1","/home/dataexim/Documents/LoginTask_JWT/client/src/App.js":"2","/home/dataexim/Documents/LoginTask_JWT/client/src/Home.jsx":"3","/home/dataexim/Documents/LoginTask_JWT/client/src/Signin.jsx":"4","/home/dataexim/Documents/LoginTask_JWT/client/src/Signup.jsx":"5","/home/dataexim/Documents/LoginTask_JWT/client/src/PagenotFound.jsx":"6","/home/dataexim/Documents/LoginTask_JWT/client/src/Navbar.jsx":"7","/home/dataexim/Documents/LoginTask_JWT/client/src/Dashboard.jsx":"8","/home/dataexim/Documents/LoginTask_JWT/client/src/ProtectedRoute.js":"9"},{"size":170,"mtime":1640851165947,"results":"10","hashOfConfig":"11"},{"size":1042,"mtime":1641295035773,"results":"12","hashOfConfig":"11"},{"size":694,"mtime":1641194321571,"results":"13","hashOfConfig":"11"},{"size":2585,"mtime":1641295115620,"results":"14","hashOfConfig":"11"},{"size":7065,"mtime":1641206277813,"results":"15","hashOfConfig":"11"},{"size":287,"mtime":1638791132788,"results":"16","hashOfConfig":"11"},{"size":1079,"mtime":1641279901235,"results":"17","hashOfConfig":"11"},{"size":2713,"mtime":1641279597465,"results":"18","hashOfConfig":"11"},{"size":424,"mtime":1641295092083,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"14ucumm",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dataexim/Documents/LoginTask_JWT/client/src/index.js",[],["41","42"],"/home/dataexim/Documents/LoginTask_JWT/client/src/App.js",[],"/home/dataexim/Documents/LoginTask_JWT/client/src/Home.jsx",[],"/home/dataexim/Documents/LoginTask_JWT/client/src/Signin.jsx",[],"/home/dataexim/Documents/LoginTask_JWT/client/src/Signup.jsx",["43"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport { TextField } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport sideImg from \"../src/employee.jpg\";\nimport { Form, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport queryString from 'query-string';\n\nconst Signup = () => {\n    //navigate the page\n    const history = useHistory();\n    //for store the edited user data\n    const [editedData, seteditedData] = useState([])\n    //gert edited user id\n    const { id } = queryString.parse(window.location.search)\n\n    //use UseFormik\n    const formik = useFormik({\n        initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            contact: \"\",\n            profession: \"\",\n            salary: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n\n        onSubmit: (values) => {\n            //update the user data\n            if (id) {\n                Axios.put(`/updateUser/${id}`, values)\n                    .then(() => {\n                        history.push('/dashboard');\n                    })\n                    .catch(err => {\n                        console.log(\"error: \" + err)\n                    })\n            }\n\n            else {\n                //add new user\n                if (values.password === values.confirmPassword) {\n                    Axios.post(`/signUp`, values)\n                        .then((res) => {\n                            alert(\"You are Register Successfully\");\n                            history.push('/signIn');\n                        })\n                } else {\n                    alert(\"confirm password not match\")\n                }\n\n\n            }\n        }\n    });\n\n    //for getting the edited user data\n    useEffect(() => {\n        if (id) {\n            Axios.get(`/editUser/${id}`)\n                .then(res => {\n                    seteditedData(res.data);\n                })\n                .catch(err => {\n                    console.log(\"error: \" + err);\n                })\n        }\n    }, [id]);\n\n\n    //set inputfield when editedData state changed\n    useEffect(() => {\n        if (id && editedData) {\n            formik.setValues(editedData)\n        }\n    }, [editedData])\n\n\n\n    return (\n        <>\n            <div className=\"main-div\">\n                <form className=\"signupUser\" onSubmit={formik.handleSubmit}>\n                    <h2>\n                        <strong>SIGN UP</strong>\n                    </h2>\n\n                    <TextField\n                        label=\"First Name\"\n                        variant=\"standard\"\n                        name=\"firstName\"\n                        type=\"text\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.firstName}\n                    />\n                    <TextField\n                        label=\"Last Name\"\n                        variant=\"standard\"\n                        name=\"lastName\"\n                        type=\"text\"\n\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.lastName}\n                    />\n                    <TextField\n                        label=\"Email\"\n                        variant=\"standard\"\n                        name=\"email\"\n                        type=\"email\"\n\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                    />\n                    <TextField\n                        label=\"Contact\"\n                        variant=\"standard\"\n                        name=\"contact\"\n                        type=\"number\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.contact}\n                    />\n                    <TextField\n                        label=\"profession\"\n                        variant=\"standard\"\n                        name=\"profession\"\n                        type=\"text\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.profession}\n                    />\n                    <TextField\n                        label=\"salary\"\n                        variant=\"standard\"\n                        name=\"salary\"\n                        type=\"number\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.salary}\n                    />\n                    <TextField\n                        label=\"Password\"\n                        variant=\"standard\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                    <TextField\n                        label=\"Confirm Password\"\n                        variant=\"standard\"\n                        name=\"confirmPassword\"\n                        required\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.confirmPassword}\n                    />\n\n                    <div className=\"Bottom-class\">\n                        {!id ?\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    className=\"signup-btn\"\n                                // onClick={settoggleButton(true)}\n                                >\n                                    SIGN UP\n                                </Button>\n                            </Form.Item>\n                            : (\n                                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        className=\"signup-btn\"\n                                    // onClick={settoggleButton(false)}\n                                    // onClick={() => dispatch(updateSelectedUserdata())}\n                                    >\n                                        UPDATE\n                                    </Button>\n                                </Form.Item>\n                            )}\n                    </div>\n                    <NavLink to=\"/signIn\">I have already Registered</NavLink>\n                </form>\n\n                <div className=\"Side-image\">\n                    <img className=\"img\" src={sideImg} alt=\"side view\" />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Signup;","/home/dataexim/Documents/LoginTask_JWT/client/src/PagenotFound.jsx",[],"/home/dataexim/Documents/LoginTask_JWT/client/src/Navbar.jsx",[],"/home/dataexim/Documents/LoginTask_JWT/client/src/Dashboard.jsx",["44"],"import { React, useEffect, useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport Axios from 'axios'\n\nconst Dashboard = () => {\n    //store the user data\n    const [employeeList, setEmployeeList] = useState([]);\n    //destructuring the user data\n    const { _id, firstName, lastName, email, contact, profession, salary } = employeeList;\n    const history = useHistory();\n    useEffect(() => {\n        Axios.get(`/getEmployees`)\n            .then((res) => {\n                setEmployeeList(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        Axios.get(`/dashboard`)\n            .then((res) => {\n                setEmployeeList(res.data)\n            })\n            .catch(err => {\n                //not authenticated then navigate to login page\n                console.log(err);\n                history.push('/signin')\n            })\n    }, [])\n\n\n    const handleDelete = (id) => {\n        Axios.delete(`/deleteUser/${id}`)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(\"error\" + err);\n            })\n    }\n\n    return (\n        <div className=\"das-main-div\">\n            <div className=\"list-div\">\n                <div className=\"employeeData\" >\n                    <div className=\"employeeFeild\">\n                        <label>FirstName:-</label>\n                        <p>{firstName}</p>\n                    </div>\n                    <div className=\"employeeFeild\">\n                        <label>LastName:-</label>\n                        <p>{lastName}</p>\n                    </div>\n                    <div className=\"employeeFeild\">\n                        <label>Email:-</label>\n                        <p>{email}</p>\n                    </div>\n                    <div className=\"employeeFeild\">\n                        <label>Contact:-</label>\n                        <p>{contact}</p>\n                    </div>\n                    <div className=\"employeeFeild\">\n                        <label>Profession:-</label>\n                        <p>{profession}</p>\n                    </div>\n                    <div className=\"employeeFeild\">\n                        <label>Salary:-</label>\n                        <p>{salary}</p>\n                    </div>\n                    <div className=\"functionalButtons\">\n                        <NavLink to={`/editUser/:?id=${_id}`}>\n                            <button>Edit</button>\n                        </NavLink>\n                        <button onClick={() => handleDelete(_id)}>Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default Dashboard;","/home/dataexim/Documents/LoginTask_JWT/client/src/ProtectedRoute.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":80,"column":8,"nodeType":"51","endLine":80,"endColumn":20,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":28,"column":8,"nodeType":"51","endLine":28,"endColumn":10,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formik' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [editedData, formik, id]",{"range":"63","text":"64"},"Update the dependencies array to be: [history]",{"range":"65","text":"66"},[2291,2303],"[editedData, formik, id]",[887,889],"[history]"]