{"ast":null,"code":"var _jsxFileName = \"/home/dataexim/Documents/login_task_JWT/client/src/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { TextField } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport sideImg from \"../src/employee.jpg\";\nimport { Form, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const history = useNavigate();\n  const {\n    id\n  } = queryString.parse(window.location.search); // const [toggleButton, settoggleButton] = useState(true);\n\n  const selectedEditId = useSelector(state => state.employeeReducer.selectedEditId);\n  const formState = useSelector(state => state.employeeReducer.formState);\n  const formik = useFormik({\n    initialValues: {\n      id: new Date().getTime().toString(),\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      contact: \"\",\n      profession: \"\",\n      salary: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: values => {\n      if (id) {\n        dispatch(updateSelectedUserdata(id, values));\n        history('/Dashboard');\n      } else {\n        Axios.post(`/signUp`, values).then(res => {\n          // alert(\"Registration Successfully\");\n          dispatch(submitData(values));\n          formik.handleReset();\n          history('/Dashboard');\n        }).catch(err => {\n          alert(\"Invalid Registration\");\n          console.log(err);\n        });\n      }\n    }\n  });\n  useEffect(() => {\n    if (id) {\n      dispatch(selectEditList(id));\n    }\n  }, []);\n  useEffect(() => {\n    if (id && formState) {\n      formik.setValues(formState);\n    }\n  }, [formState]);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signupUser\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"EMPLOYEE REGISTRATION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please fill in this form to create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"First Name\",\n          variant: \"standard\",\n          name: \"firstName\",\n          onChange: formik.handleChange,\n          value: formik.values.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Last Name\",\n          variant: \"standard\",\n          name: \"lastName\",\n          onChange: formik.handleChange,\n          value: formik.values.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          variant: \"standard\",\n          name: \"email\",\n          type: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Contact\",\n          variant: \"standard\",\n          name: \"contact\",\n          type: \"number\",\n          onChange: formik.handleChange,\n          value: formik.values.contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"profession\",\n          variant: \"standard\",\n          name: \"profession\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.profession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"salary\",\n          variant: \"standard\",\n          name: \"salary\",\n          type: \"number\",\n          onChange: formik.handleChange,\n          value: formik.values.salary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          variant: \"standard\",\n          name: \"password\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          variant: \"standard\",\n          name: \"confirmPassword\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Bottom-class\",\n          children: [!selectedEditId ? /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"signup-btn\" // onClick={settoggleButton(true)}\n              ,\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"signup-btn\" // onClick={settoggleButton(false)}\n              // onClick={() => dispatch(updateSelectedUserdata())}\n              ,\n              children: \"UPDATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: formik.handleReset,\n              children: \"RESET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/Signin\",\n          children: \"I have already Registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Side-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: sideImg,\n          alt: \"side view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Signup, \"2PlddFsJkZZ9O8PD0SzWGzRgASw=\", true, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/dataexim/Documents/login_task_JWT/client/src/Signup.jsx"],"names":["React","useState","useEffect","Axios","TextField","NavLink","useNavigate","sideImg","Form","Button","useFormik","queryString","Signup","history","id","parse","window","location","search","selectedEditId","useSelector","state","employeeReducer","formState","formik","initialValues","Date","getTime","toString","firstName","lastName","email","contact","profession","salary","password","confirmPassword","onSubmit","values","dispatch","updateSelectedUserdata","post","then","res","submitData","handleReset","catch","err","alert","console","log","selectEditList","setValues","useDispatch","handleSubmit","handleChange","offset","span"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,WAAP;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,OAAO,GAAGP,WAAW,EAA3B;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAASH,WAAW,CAACI,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf,CAJiB,CAMjB;;AACA,QAAMC,cAAc,GAAGC,WAAW,CAC7BC,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBH,cADH,CAAlC;AAIA,QAAMI,SAAS,GAAGH,WAAW,CAAEC,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBC,SAAlC,CAA7B;AACA,QAAMC,MAAM,GAAGd,SAAS,CAAC;AACrBe,IAAAA,aAAa,EAAE;AACXX,MAAAA,EAAE,EAAE,IAAIY,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EADO;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,OAAO,EAAE,EALE;AAMXC,MAAAA,UAAU,EAAE,EAND;AAOXC,MAAAA,MAAM,EAAE,EAPG;AAQXC,MAAAA,QAAQ,EAAE,EARC;AASXC,MAAAA,eAAe,EAAE;AATN,KADM;AAarBC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAElB,UAAIxB,EAAJ,EAAQ;AACJyB,QAAAA,QAAQ,CAACC,sBAAsB,CAAC1B,EAAD,EAAKwB,MAAL,CAAvB,CAAR;AACAzB,QAAAA,OAAO,CAAC,YAAD,CAAP;AAEH,OAJD,MAIO;AAEHV,QAAAA,KAAK,CAACsC,IAAN,CAAY,SAAZ,EAAsBH,MAAtB,EACKI,IADL,CACWC,GAAD,IAAS;AACX;AACAJ,UAAAA,QAAQ,CAACK,UAAU,CAACN,MAAD,CAAX,CAAR;AACAd,UAAAA,MAAM,CAACqB,WAAP;AACAhC,UAAAA,OAAO,CAAC,YAAD,CAAP;AACH,SANL,EAOKiC,KAPL,CAOWC,GAAG,IAAI;AACVC,UAAAA,KAAK,CAAC,sBAAD,CAAL;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,SAVL;AAWH;AACJ;AAjCoB,GAAD,CAAxB;AAoCA7C,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,EAAJ,EAAQ;AACJyB,MAAAA,QAAQ,CAACY,cAAc,CAACrC,EAAD,CAAf,CAAR;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,EAAE,IAAIS,SAAV,EAAqB;AACjBC,MAAAA,MAAM,CAAC4B,SAAP,CAAiB7B,SAAjB;AACH;AACJ,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAMA,QAAMgB,QAAQ,GAAGc,WAAW,EAA5B;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,QAAQ,EAAE7B,MAAM,CAAC8B,YAA9C;AAAA,gCACI;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,YADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,IAAI,EAAC,WAHT;AAII,UAAA,QAAQ,EAAE9B,MAAM,CAAC+B,YAJrB;AAKI,UAAA,KAAK,EAAE/B,MAAM,CAACc,MAAP,CAAcT;AALzB;AAAA;AAAA;AAAA;AAAA,gBALJ,eAYI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,WADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,QAAQ,EAAEL,MAAM,CAAC+B,YAJrB;AAKI,UAAA,KAAK,EAAE/B,MAAM,CAACc,MAAP,CAAcR;AALzB;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAmBI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,OADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,QAAQ,EAAEN,MAAM,CAAC+B,YALrB;AAMI,UAAA,KAAK,EAAE/B,MAAM,CAACc,MAAP,CAAcP;AANzB;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eA2BI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,IAAI,EAAC,SAHT;AAII,UAAA,IAAI,EAAC,QAJT;AAKI,UAAA,QAAQ,EAAEP,MAAM,CAAC+B,YALrB;AAMI,UAAA,KAAK,EAAE/B,MAAM,CAACc,MAAP,CAAcN;AANzB;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eAmCI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,YADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,IAAI,EAAC,YAHT;AAII,UAAA,IAAI,EAAC,MAJT;AAKI,UAAA,QAAQ,EAAER,MAAM,CAAC+B,YALrB;AAMI,UAAA,KAAK,EAAE/B,MAAM,CAACc,MAAP,CAAcL;AANzB;AAAA;AAAA;AAAA;AAAA,gBAnCJ,eA2CI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,QADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,IAAI,EAAC,QAJT;AAKI,UAAA,QAAQ,EAAET,MAAM,CAAC+B,YALrB;AAMI,UAAA,KAAK,EAAE/B,MAAM,CAACc,MAAP,CAAcJ;AANzB;AAAA;AAAA;AAAA;AAAA,gBA3CJ,eAmDI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,UADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,QAAQ,EAAEV,MAAM,CAAC+B,YALrB;AAMI,UAAA,KAAK,EAAE/B,MAAM,CAACc,MAAP,CAAcH;AANzB;AAAA;AAAA;AAAA;AAAA,gBAnDJ,eA2DI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,kBADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,IAAI,EAAC,iBAHT;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,QAAQ,EAAEX,MAAM,CAAC+B,YALrB;AAMI,UAAA,KAAK,EAAE/B,MAAM,CAACc,MAAP,CAAcF;AANzB;AAAA;AAAA;AAAA;AAAA,gBA3DJ,eAoEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,qBACK,CAACjB,cAAD,gBAEG,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,UAAU,EAAE;AAAEqC,cAAAA,MAAM,EAAE,CAAV;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAAvB;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,IAAI,EAAC,SADT;AAEI,cAAA,QAAQ,EAAC,QAFb;AAGI,cAAA,SAAS,EAAC,YAHd,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFH,gBAaG,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,UAAU,EAAE;AAAED,cAAAA,MAAM,EAAE,CAAV;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAAvB;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,IAAI,EAAC,SADT;AAEI,cAAA,QAAQ,EAAC,QAFb;AAGI,cAAA,SAAS,EAAC,YAHd,CAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAdR,eA2BI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,UAAU,EAAE;AAAED,cAAAA,MAAM,EAAE,CAAV;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAAvB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAEjC,MAAM,CAACqB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApEJ,eAqGI,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArGJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAyGI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,GAAG,EAAEtC,OAA1B;AAAmC,UAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAzGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiHH,CA/KD;;GAAMK,M;UAEcN,W,EAUDI,S;;;KAZbE,M;AAiLN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport { TextField } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport sideImg from \"../src/employee.jpg\";\nimport { Form, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport queryString from 'query-string';\n\nconst Signup = () => {\n\n    const history = useNavigate();\n\n    const { id } = queryString.parse(window.location.search)\n\n    // const [toggleButton, settoggleButton] = useState(true);\n    const selectedEditId = useSelector(\n        (state) => state.employeeReducer.selectedEditId\n    );\n\n    const formState = useSelector((state) => state.employeeReducer.formState);\n    const formik = useFormik({\n        initialValues: {\n            id: new Date().getTime().toString(),\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            contact: \"\",\n            profession: \"\",\n            salary: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n\n        onSubmit: (values) => {\n\n            if (id) {\n                dispatch(updateSelectedUserdata(id, values))\n                history('/Dashboard')\n\n            } else {\n\n                Axios.post(`/signUp`, values)\n                    .then((res) => {\n                        // alert(\"Registration Successfully\");\n                        dispatch(submitData(values))\n                        formik.handleReset()\n                        history('/Dashboard')\n                    })\n                    .catch(err => {\n                        alert(\"Invalid Registration\");\n                        console.log(err)\n                    })\n            }\n        }\n    });\n\n    useEffect(() => {\n        if (id) {\n            dispatch(selectEditList(id))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (id && formState) {\n            formik.setValues(formState)\n        }\n    }, [formState])\n\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <div className=\"main-div\">\n                <form className=\"signupUser\" onSubmit={formik.handleSubmit}>\n                    <h2>\n                        <strong>EMPLOYEE REGISTRATION</strong>\n                    </h2>\n                    <h3>Please fill in this form to create an account</h3>\n                    <TextField\n                        label=\"First Name\"\n                        variant=\"standard\"\n                        name=\"firstName\"\n                        onChange={formik.handleChange}\n                        value={formik.values.firstName}\n                    />\n                    <TextField\n                        label=\"Last Name\"\n                        variant=\"standard\"\n                        name=\"lastName\"\n                        onChange={formik.handleChange}\n                        value={formik.values.lastName}\n                    />\n                    <TextField\n                        label=\"Email\"\n                        variant=\"standard\"\n                        name=\"email\"\n                        type=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                    />\n                    <TextField\n                        label=\"Contact\"\n                        variant=\"standard\"\n                        name=\"contact\"\n                        type=\"number\"\n                        onChange={formik.handleChange}\n                        value={formik.values.contact}\n                    />\n                    <TextField\n                        label=\"profession\"\n                        variant=\"standard\"\n                        name=\"profession\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.profession}\n                    />\n                    <TextField\n                        label=\"salary\"\n                        variant=\"standard\"\n                        name=\"salary\"\n                        type=\"number\"\n                        onChange={formik.handleChange}\n                        value={formik.values.salary}\n                    />\n                    <TextField\n                        label=\"Password\"\n                        variant=\"standard\"\n                        name=\"password\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                    <TextField\n                        label=\"Confirm Password\"\n                        variant=\"standard\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.confirmPassword}\n                    />\n\n                    <div className=\"Bottom-class\">\n                        {!selectedEditId ? (\n\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    className=\"signup-btn\"\n                                // onClick={settoggleButton(true)}\n                                >\n                                    ADD\n                                </Button>\n                            </Form.Item>\n                        ) : (\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    className=\"signup-btn\"\n                                // onClick={settoggleButton(false)}\n                                // onClick={() => dispatch(updateSelectedUserdata())}\n                                >\n                                    UPDATE\n                                </Button>\n                            </Form.Item>\n                        )}\n\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button type=\"danger\" onClick={formik.handleReset}>\n                                RESET\n                            </Button>\n                        </Form.Item>\n                    </div>\n                    <NavLink to=\"/Signin\">I have already Registered</NavLink>\n                </form>\n\n                <div className=\"Side-image\">\n                    <img className=\"img\" src={sideImg} alt=\"side view\" />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}