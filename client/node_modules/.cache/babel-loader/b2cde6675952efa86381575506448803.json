{"ast":null,"code":"var _jsxFileName = \"/home/dataexim/Documents/login_task_JWT/client/src/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { TextField } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport sideImg from \"../src/employee.jpg\";\nimport { Form, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  //navigate the page\n  const history = useNavigate(); //for store the edited user data\n\n  const [editedData, seteditedData] = useState([]); //gert edited user id\n\n  const {\n    id\n  } = queryString.parse(window.location.search); //use UseFormik\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      contact: \"\",\n      profession: \"\",\n      salary: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: values => {\n      //update the user data\n      if (id) {\n        Axios.put(`/updateUser/${id}`, values).then(() => {\n          history.push('/Dashboard');\n        }).catch(err => {\n          console.log(\"error: \" + err);\n        });\n      } //add new user\n      else {\n        Axios.post(`/signUp`, values).then(res => {\n          alert(\"Registration Successfully\");\n          history.push('/Login');\n        }).catch(err => {\n          alert(\"Invalid Registration\");\n          console.log(err);\n        });\n      }\n    }\n  }); //for getting the edited user data\n\n  useEffect(() => {\n    if (id) {\n      Axios.get(`/editUser/${id}`).then(res => {\n        seteditedData(res.data);\n      }).catch(err => {\n        console.log(\"error: \" + err);\n      });\n    }\n  }, [id]); //set inputfield when editedData state changed\n\n  useEffect(() => {\n    if (id && editedData) {\n      formik.setValues(editedData);\n    }\n  }, [editedData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signupUser\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"EMPLOYEE REGISTRATION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please fill in this form to create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"First Name\",\n          variant: \"standard\",\n          name: \"firstName\",\n          required: true,\n          onChange: formik.handleChange,\n          value: formik.values.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Last Name\",\n          variant: \"standard\",\n          name: \"lastName\",\n          required: true,\n          onChange: formik.handleChange,\n          value: formik.values.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          variant: \"standard\",\n          name: \"email\",\n          required: true,\n          type: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Contact\",\n          variant: \"standard\",\n          name: \"contact\",\n          required: true,\n          type: \"number\",\n          onChange: formik.handleChange,\n          value: formik.values.contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"profession\",\n          variant: \"standard\",\n          name: \"profession\",\n          required: true,\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.profession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"salary\",\n          variant: \"standard\",\n          name: \"salary\",\n          required: true,\n          type: \"number\",\n          onChange: formik.handleChange,\n          value: formik.values.salary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          variant: \"standard\",\n          name: \"password\",\n          required: true,\n          type: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          variant: \"standard\",\n          name: \"confirmPas requiredsword\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Bottom-class\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"signup-btn\" // onClick={settoggleButton(true)}\n              ,\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"signup-btn\" // onClick={settoggleButton(false)}\n              // onClick={() => dispatch(updateSelectedUserdata())}\n              ,\n              children: \"UPDATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), \")\", /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: formik.handleReset,\n              children: \"RESET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/Signin\",\n          children: \"I have already Registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Side-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: sideImg,\n          alt: \"side view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Signup, \"zZ2L2YUMJNb7TyCDNAF4gFU74f4=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/dataexim/Documents/login_task_JWT/client/src/Signup.jsx"],"names":["React","useState","useEffect","Axios","TextField","NavLink","useNavigate","sideImg","Form","Button","useFormik","queryString","Signup","history","editedData","seteditedData","id","parse","window","location","search","formik","initialValues","firstName","lastName","email","contact","profession","salary","password","confirmPassword","onSubmit","values","put","then","push","catch","err","console","log","post","res","alert","get","data","setValues","handleSubmit","handleChange","offset","span","handleReset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport { TextField } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport sideImg from \"../src/employee.jpg\";\nimport { Form, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport queryString from 'query-string';\n\nconst Signup = () => {\n    //navigate the page\n    const history = useNavigate();\n    //for store the edited user data\n    const [editedData, seteditedData] = useState([])\n    //gert edited user id\n    const { id } = queryString.parse(window.location.search)\n\n    //use UseFormik\n    const formik = useFormik({\n        initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            contact: \"\",\n            profession: \"\",\n            salary: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n\n        onSubmit: (values) => {\n            //update the user data\n            if (id) {\n                Axios.put(`/updateUser/${id}`, values)\n                    .then(() => {\n                        history.push('/Dashboard');\n                    })\n                    .catch(err => {\n                        console.log(\"error: \" + err)\n                    })\n            }\n            //add new user\n            else {\n                Axios.post(`/signUp`, values)\n                    .then((res) => {\n                        alert(\"Registration Successfully\");\n                        history.push('/Login');\n                    })\n                    .catch(err => {\n                        alert(\"Invalid Registration\");\n                        console.log(err)\n                    })\n            }\n        }\n    });\n\n    //for getting the edited user data\n    useEffect(() => {\n        if (id) {\n            Axios.get(`/editUser/${id}`)\n                .then(res => {\n                    seteditedData(res.data);\n                })\n                .catch(err => {\n                    console.log(\"error: \" + err);\n                })\n        }\n    }, [id]);\n\n\n    //set inputfield when editedData state changed\n    useEffect(() => {\n        if (id && editedData) {\n            formik.setValues(editedData)\n        }\n    }, [editedData])\n\n\n\n    return (\n        <>\n            <div className=\"main-div\">\n                <form className=\"signupUser\" onSubmit={formik.handleSubmit}>\n                    <h2>\n                        <strong>EMPLOYEE REGISTRATION</strong>\n                    </h2>\n                    <h3>Please fill in this form to create an account</h3>\n                    <TextField\n                        label=\"First Name\"\n                        variant=\"standard\"\n                        name=\"firstName\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.firstName}\n                    />\n                    <TextField\n                        label=\"Last Name\"\n                        variant=\"standard\"\n                        name=\"lastName\"\n\n                        required onChange={formik.handleChange}\n                        value={formik.values.lastName}\n                    />\n                    <TextField\n                        label=\"Email\"\n                        variant=\"standard\"\n                        name=\"email\"\n\n                        required type=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                    />\n                    <TextField\n                        label=\"Contact\"\n                        variant=\"standard\"\n                        name=\"contact\"\n\n                        required type=\"number\"\n                        onChange={formik.handleChange}\n                        value={formik.values.contact}\n                    />\n                    <TextField\n                        label=\"profession\"\n                        variant=\"standard\"\n                        name=\"profession\"\n\n                        required type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.profession}\n                    />\n                    <TextField\n                        label=\"salary\"\n                        variant=\"standard\"\n                        name=\"salary\"\n\n                        required type=\"number\"\n                        onChange={formik.handleChange}\n                        value={formik.values.salary}\n                    />\n                    <TextField\n                        label=\"Password\"\n                        variant=\"standard\"\n                        name=\"password\"\n\n                        required type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                    <TextField\n                        label=\"Confirm Password\"\n                        variant=\"standard\"\n                        name=\"confirmPas\n                        requiredsword\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.confirmPassword}\n                    />\n\n                    <div className=\"Bottom-class\">\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                className=\"signup-btn\"\n                            // onClick={settoggleButton(true)}\n                            >\n                                ADD\n                            </Button>\n                        </Form.Item>\n\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                className=\"signup-btn\"\n                            // onClick={settoggleButton(false)}\n                            // onClick={() => dispatch(updateSelectedUserdata())}\n                            >\n                                UPDATE\n                            </Button>\n                        </Form.Item>\n                        )\n\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button type=\"danger\" onClick={formik.handleReset}>\n                                RESET\n                            </Button>\n                        </Form.Item>\n                    </div>\n                    <NavLink to=\"/Signin\">I have already Registered</NavLink>\n                </form>\n\n                <div className=\"Side-image\">\n                    <img className=\"img\" src={sideImg} alt=\"side view\" />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}