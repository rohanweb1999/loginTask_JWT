{"ast":null,"code":"var _jsxFileName = \"/home/dataexim/Documents/LoginTask_JWT/client/src/ProtectedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  let {\n    auth,\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (auth) return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 30\n      }, this);\n      if (!auth) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          path: \"/signin\",\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 31\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/dataexim/Documents/LoginTask_JWT/client/src/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","auth","component","Component","rest","props","path","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAS,EAAEC,SAAnB;AAA8B,OAAGC;AAAjC,GAA4C;AAChE,sBAEI,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGC,KAAD,IAAW;AAChC,UAAIJ,IAAJ,EAAU,oBAAO,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACV,UAAI,CAACJ,IAAL,EAAW,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEK,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA1B;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACd;AAHD;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH,CARD;;KAAMT,c;AAUN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst ProtectedRoute = ({ auth, component: Component, ...rest }) => {\n    return (\n\n        <Route {...rest} render={(props) => {\n            if (auth) return <Component {...props} />;\n            if (!auth) return <Redirect to={{ path: \"/signin\", state: { from: props.location } }} />\n        }} />\n    )\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}